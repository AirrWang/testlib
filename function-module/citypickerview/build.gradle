apply plugin: 'com.android.library'



android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 27
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //增加lint选项，不加的话下面上传到jCenter有可能会报错
    lintOptions {
        abortOnError false
    }

}

buildscript {
    repositories {
        jcenter()
    }

}

task makeJar(type: Copy) {
    delete 'build/libs/citypicker.jar' //删除已经存在的jar包
    from('build/intermediates/bundles/release/')//从该目录下加载要打包的文件
    into('build/libs/')//jar包的保存目录
    include('classes.jar')//设置过滤，只打包classes文件
    rename('classes.jar', 'citypicker.jar')//重命名，mylibrary.jar 根据自己的需求设置
}
makeJar.dependsOn(build)


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:27.1.1'
    compile 'com.google.code.gson:gson:2.8.1'
}

//你的library的地址
def siteUrl = 'https://github.com/crazyandcoder/citypicker'
def gitUrl = 'https://github.com/crazyandcoder/citypicker.git'
def issueUrl = 'https://github.com/crazyandcoder/citypicker/issues'

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}


//task javadoc(type: Javadoc) {
//
//    //增加编码，这行很重要，如果是windows系统，同时如果在代码中有中文的话，不加这行，上传会报错
//    options.encoding="utf-8"
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())


